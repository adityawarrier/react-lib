{
  "compilerOptions": {
    "target": "es2015" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "module": "es2015" /* Specify what module code is generated. */,
    "lib": ["dom", "ES2015"],
    "jsx": "react-jsx" /* Specify what JSX code is generated. */,
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "declaration": true /* Generate .d.ts files from TypeScript and JavaScript files in your project. */,
    "declarationDir": "types", /* Otherwise, ends up creating multiple .d.ts files as per file structure */
    "sourceMap": true /* Create source map files for emitted JavaScript files. */,
    "outDir": "./dist/esm" /* Specify an output folder for all emitted files. */,
    "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    "strict": true /* Enable all strict type-checking options. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "emitDeclarationOnly": true /* Don't generate JS files, rollup will do that only export type declarations */,

    
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied `any` type.. */,
    "strictNullChecks": true /* When type checking, take into account `null` and `undefined`. */,
    "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
    "strictBindCallApply": true /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */,
    "noUnusedLocals": true /* Enable error reporting when a local variables aren't read. */,
    "noUnusedParameters": true /* Raise an error when a function parameter isn't read */,
    "noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements. */,
    "noUncheckedIndexedAccess": true /* Include 'undefined' in index signature results */,
    "noImplicitOverride": true /* Ensure overriding members in derived classes are marked with an override modifier. */
  },
  "include": ["src/**/*.ts", "src/**/*.tsx", "declaration.d.ts"],
  "exclude": ["node-modules", "src/**/*.stories.tsx"]
}
